clc;
clear;

addpath(genpath(pwd));
load DFL_radio_map;
load initial_DFL_radio_map;
noise = 2;
fingerprint = fingerprint + normrnd(0, noise, size(fingerprint)); % add noise
m = size(fingerprint, 3);

[ dataTrain, labelTrain] = get_data_for_ML( fingerprint, 10000 );

%% test single object
load testData-1; %traces, rss, grilLabel
rss = rss(1:1000, :);
traces = traces


Thr = 10;
t = size(rss, 1);
for i = 1 : t
    cur_rss = rss(i, :);
    idx = abs(cur_rss - initialRadioMap') > Thr;
    %only use changed links to train: mean error = 0.6579m
    k = 20;
    model = ClassificationKNN.fit(dataTrain(:, idx),labelTrain,'NumNeighbors',k);
    labelPredict(i) = predict(model, cur_rss(idx));
    if rem(i, 10) == 0
        disp(i);
    end
end

classfication_Accuracy_knn = sum(labelPredict == gridLabel') / length(gridLabel);
[x, y] = label2xy(labelPredict);
err_knn = sqrt((x' - traces(:, 1)).^2 + (y' - traces(:, 2)).^2);



